plugins {
  alias(libs.plugins.codequalitytools) apply true
  alias(libs.plugins.dependencygraphgenerator) apply true
  alias(libs.plugins.android.application) apply false
  alias(libs.plugins.android.cache.fix) apply false
  alias(libs.plugins.android.library) apply false
  alias(libs.plugins.dokka) apply false
  alias(libs.plugins.kotlin.android) apply false
  alias(libs.plugins.kotlin.multiplatform) apply false
  alias(libs.plugins.kotlin.native.cocoapods) apply false
  alias(libs.plugins.kotlin.parcelize) apply false
  alias(libs.plugins.licensee) apply false
  alias(libs.plugins.publish) apply false
}

codeQualityTools {
  lint {
    lintConfig = rootProject.file("lint.xml")
    checkAllWarnings = true
    textReport = true
  }
  checkstyle {
    enabled = false // Kotlin only.
  }
  pmd {
   enabled = false // Kotlin only.
  }
  ktlint {
    toolVersion = libs.versions.ktlint.get()
  }
  detekt {
    enabled = false
  }
  cpd {
    enabled = false
  }
}

wrapper {
  gradleVersion = libs.versions.gradle.get()
  distributionType = Wrapper.DistributionType.ALL
}

allprojects {
  repositories {
    google()
    mavenCentral()
    gradlePluginPortal()
  }

  afterEvaluate {
    // To avoid:
    // The Kotlin source set androidAndroidTestRelease was configured but not added to any Kotlin compilation. You can add a source set to a target"s compilation by connecting it with the compilation"s default source set using "dependsOn".
    // See https://kotlinlang.org/docs/reference/building-mpp-with-gradle.html#connecting-source-sets
    project.extensions.findByType(org.jetbrains.kotlin.gradle.dsl.KotlinMultiplatformExtension.class)?.sourceSets?.removeAll {
      [
        "androidAndroidTestRelease",
        "androidTestFixtures",
        "androidTestFixturesDebug",
        "androidTestFixturesRelease"
      ].contains(it.name)
    }
  }
}

subprojects {
  plugins.withType(com.android.build.gradle.api.AndroidBasePlugin) {
    project.apply plugin: "org.gradle.android.cache-fix"
  }

  project.tasks.withType(Test) {
    testLogging {
      testLogging.exceptionFormat = 'full'
    }
  }
}
